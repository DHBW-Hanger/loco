{"version":3,"sources":["../../src/config.ts"],"names":["defaultClassicCredentials","apiKey","region","username","defaultCloudNativeCredentials","apiBaseUrl","credentials","setDefaultCredentials","apiVersion","rest","API_VERSIONS","V3","V1","V2","Error","getDefaultCredentials","buildMapsUrlFromBase","suffix","endsWith","substring"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;;;AAEO,IAAMA,yBAAyB,GAAG;AACvCC,EAAAA,MAAM,EAAE,gBAD+B;AAEvCC,EAAAA,MAAM,EAAE,IAF+B;AAGvCC,EAAAA,QAAQ,EAAE;AAH6B,CAAlC;;AAMA,IAAMC,6BAA6B,GAAG;AAC3CC,EAAAA,UAAU,EAAE;AAD+B,CAAtC;;AAoBP,IAAIC,WAAwB,GAAG,EAA/B;AAEAC,qBAAqB,CAAC,EAAD,CAArB;;AAEO,SAASA,qBAAT,OAA4E;AAAA,MAA5CC,UAA4C,QAA5CA,UAA4C;AAAA,MAA7BC,IAA6B;AACjFD,EAAAA,UAAU,GAAGA,UAAU,IAAIE,4BAAaC,EAAxC;;AAEA,UAAQH,UAAR;AACE,SAAKE,4BAAaE,EAAlB;AACA,SAAKF,4BAAaG,EAAlB;AACEP,MAAAA,WAAW;AAAIE,QAAAA,UAAU,EAAVA;AAAJ,SAAmBR,yBAAnB,GAAiDS,IAAjD,CAAX;AACA;;AACF,SAAKC,4BAAaC,EAAlB;AACEL,MAAAA,WAAW;AAAIE,QAAAA,UAAU,EAAVA;AAAJ,SAAmBJ,6BAAnB,GAAqDK,IAArD,CAAX;AACA;;AACF;AACE,YAAM,IAAIK,KAAJ,+BAAiCN,UAAjC,8BAAN;AATJ;AAWD;;AAEM,SAASO,qBAAT,GAA8C;AACnD,SAAOT,WAAP;AACD;;AAEM,SAASU,oBAAT,CAA8BX,UAA9B,EAA0D;AAC/D,MAAIY,MAAM,GAAG,UAAb;;AACA,MAAIZ,UAAU,CAACa,QAAX,CAAoB,GAApB,CAAJ,EAA8B;AAC5BD,IAAAA,MAAM,GAAGA,MAAM,CAACE,SAAP,CAAiB,CAAjB,CAAT;AACD;;AAED,mBAAUd,UAAV,SAAuBY,MAAvB;AACD","sourcesContent":["import {API_VERSIONS} from './api/maps-api-common';\n\nexport const defaultClassicCredentials = {\n  apiKey: 'default_public',\n  region: 'us',\n  username: 'public'\n} as const;\n\nexport const defaultCloudNativeCredentials = {\n  apiBaseUrl: 'https://gcp-us-east1.api.carto.com'\n} as const;\n\nexport interface ClassicCredentials {\n  apiVersion: 'v1' | 'v2';\n  apiKey: string;\n  region: string;\n  username: string;\n  mapsUrl?: string;\n}\n\nexport interface CloudNativeCredentials {\n  apiVersion: 'v3';\n  apiBaseUrl: string;\n  accessToken?: string;\n  mapsUrl?: string;\n}\n\nexport type Credentials = ClassicCredentials | CloudNativeCredentials;\nlet credentials: Credentials = {} as Credentials;\n\nsetDefaultCredentials({});\n\nexport function setDefaultCredentials({apiVersion, ...rest}: Partial<Credentials>) {\n  apiVersion = apiVersion || API_VERSIONS.V3;\n\n  switch (apiVersion) {\n    case API_VERSIONS.V1:\n    case API_VERSIONS.V2:\n      credentials = {apiVersion, ...defaultClassicCredentials, ...rest};\n      break;\n    case API_VERSIONS.V3:\n      credentials = {apiVersion, ...defaultCloudNativeCredentials, ...rest};\n      break;\n    default:\n      throw new Error(`Invalid API version ${apiVersion}. Use API_VERSIONS enum.`);\n  }\n}\n\nexport function getDefaultCredentials(): Credentials {\n  return credentials;\n}\n\nexport function buildMapsUrlFromBase(apiBaseUrl: string): string {\n  let suffix = '/v3/maps';\n  if (apiBaseUrl.endsWith('/')) {\n    suffix = suffix.substring(1);\n  }\n\n  return `${apiBaseUrl}${suffix}`;\n}\n"],"file":"config.js"}