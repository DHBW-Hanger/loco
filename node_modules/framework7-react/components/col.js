function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useRef, useImperativeHandle, useEffect } from 'react';
import { classNames, getExtraAttrs, emit } from '../shared/utils.js';
import { colorClasses } from '../shared/mixins.js';
import { f7ready, f7 } from '../shared/f7.js';

const Col = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    className,
    id,
    style,
    children,
    tag = 'div',
    width = 'auto',
    xsmall,
    small,
    medium,
    large,
    xlarge,
    resizable,
    resizableFixed,
    resizableAbsolute,
    resizableHandler = true
  } = props;
  const extraAttrs = getExtraAttrs(props);
  const elRef = useRef(null);

  const onClick = event => {
    emit(props, 'click', event);
  };

  const onResize = el => {
    if (el === elRef.current) {
      emit(props, 'gridResize');
    }
  };

  useImperativeHandle(ref, () => ({
    el: elRef.current
  }));
  const ColTag = tag;
  const classes = classNames(className, {
    col: width === 'auto',
    [`col-${width}`]: width !== 'auto',
    [`xsmall-${xsmall}`]: xsmall,
    [`small-${small}`]: small,
    [`medium-${medium}`]: medium,
    [`large-${large}`]: large,
    [`xlarge-${xlarge}`]: xlarge,
    resizable,
    'resizable-fixed': resizableFixed,
    'resizable-absolute': resizableAbsolute
  }, colorClasses(props));
  useEffect(() => {
    f7ready(() => {
      f7.on('gridResize', onResize);
    });
    return () => {
      f7.off('gridResize', onResize);
    };
  });
  return /*#__PURE__*/React.createElement(ColTag, _extends({
    id: id,
    style: style,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick: onClick
  }), children, resizable && resizableHandler && /*#__PURE__*/React.createElement("span", {
    className: "resize-handler"
  }));
});
Col.displayName = 'f7-col';
export default Col;