function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { classNames, getExtraAttrs, emit } from '../shared/utils.js';

const BreadcrumbsCollapsed = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    className,
    id,
    style,
    children
  } = props;
  const extraAttrs = getExtraAttrs(props);
  const elRef = useRef(null);
  useImperativeHandle(ref, () => ({
    el: elRef.current
  }));

  const onClick = e => {
    emit(props, 'click', e);
  };

  return /*#__PURE__*/React.createElement("div", _extends({
    className: classNames('breadcrumbs-collapsed', className),
    ref: elRef,
    id: id,
    style: style,
    onClick: onClick
  }, extraAttrs), /*#__PURE__*/React.createElement("span", null), children);
});
BreadcrumbsCollapsed.displayName = 'f7-breadcrumbs-collapsed';
export default BreadcrumbsCollapsed;