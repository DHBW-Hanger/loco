function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useRef, useImperativeHandle, useState } from 'react';
import { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect.js';
import { f7events, f7routers, f7 } from '../shared/f7.js';

const RoutableModals = /*#__PURE__*/forwardRef((props, ref) => {
  const [modals, setModals] = useState([]);
  const elRef = useRef(null);
  const routerData = useRef(null);
  useImperativeHandle(ref, () => ({
    el: elRef.current
  }));

  const onMount = () => {
    routerData.current = {
      modals,
      el: elRef.current,

      setModals(newModals) {
        setModals([...newModals]);
      }

    };
    f7routers.modals = routerData.current;
  };

  const onDestroy = () => {
    if (!routerData.current) return;
    f7routers.modals = null;
    routerData.current = null;
  };

  useIsomorphicLayoutEffect(() => {
    onMount();
    return onDestroy;
  }, []);
  useIsomorphicLayoutEffect(() => {
    if (!routerData.current || !f7) return;
    f7events.emit('modalsRouterDidUpdate', routerData.current);
  });
  return /*#__PURE__*/React.createElement("div", {
    ref: elRef,
    className: "framework7-modals"
  }, modals.map(_ref => {
    let {
      component: ModalComponent,
      id: modalId,
      props: modalProps
    } = _ref;
    return /*#__PURE__*/React.createElement(ModalComponent, _extends({
      key: modalId
    }, modalProps));
  }));
});
RoutableModals.displayName = 'f7-routable-modals';
export default RoutableModals;