function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { classNames, getExtraAttrs, emit } from '../shared/utils.js';
import { colorClasses } from '../shared/mixins.js';

const SwipeoutButton = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    className,
    id,
    style,
    children,
    text,
    confirmTitle,
    confirmText,
    overswipe,
    close,
    delete: deleteProp,
    href
  } = props;
  const extraAttrs = getExtraAttrs(props);
  const elRef = useRef(null);

  const onClick = e => {
    emit(props, 'click', e);
  };

  useImperativeHandle(ref, () => ({
    el: elRef.current
  }));
  const classes = classNames(className, {
    'swipeout-overswipe': overswipe,
    'swipeout-delete': deleteProp,
    'swipeout-close': close
  }, colorClasses(props));
  return /*#__PURE__*/React.createElement("a", _extends({
    ref: elRef,
    href: href || '#',
    id: id,
    style: style,
    "data-confirm": confirmText || undefined,
    "data-confirm-title": confirmTitle || undefined,
    className: classes
  }, extraAttrs, {
    onClick: onClick
  }), children, text);
});
SwipeoutButton.displayName = 'f7-swipeout-button';
export default SwipeoutButton;