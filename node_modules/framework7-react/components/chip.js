function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { classNames, getExtraAttrs, getSlots, emit } from '../shared/utils.js';
import { colorClasses } from '../shared/mixins.js';
import { useTooltip } from '../shared/use-tooltip.js';
import { useIcon } from '../shared/use-icon.js';

const Chip = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    className,
    id,
    style,
    media,
    text,
    deleteable,
    mediaTextColor,
    mediaBgColor,
    outline
  } = props;
  const extraAttrs = getExtraAttrs(props);

  const onClick = event => {
    emit(props, 'click', event);
  };

  const onDeleteClick = event => {
    emit(props, 'delete', event);
  };

  const elRef = useRef(null);
  useImperativeHandle(ref, () => ({
    el: elRef.current
  }));
  useTooltip(elRef, props);
  const slots = getSlots(props);
  const iconEl = useIcon(props);
  let mediaEl;
  let labelEl;
  let deleteEl;

  if (media || iconEl || slots && slots.media) {
    const mediaClasses = classNames('chip-media', mediaTextColor && `text-color-${mediaTextColor}`, mediaBgColor && `bg-color-${mediaBgColor}`);
    mediaEl = /*#__PURE__*/React.createElement("div", {
      className: mediaClasses
    }, iconEl, media, slots.media);
  }

  if (text || slots && (slots.text || slots.default && slots.default.length)) {
    labelEl = /*#__PURE__*/React.createElement("div", {
      className: "chip-label"
    }, text, slots.text, slots.default);
  }

  if (deleteable) {
    deleteEl = /*#__PURE__*/React.createElement("a", {
      className: "chip-delete",
      onClick: onDeleteClick
    });
  }

  const classes = classNames(className, 'chip', {
    'chip-outline': outline
  }, colorClasses(props));
  return /*#__PURE__*/React.createElement("div", _extends({
    id: id,
    style: style,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick: onClick
  }), mediaEl, labelEl, deleteEl);
});
Chip.displayName = 'f7-chip';
export default Chip;