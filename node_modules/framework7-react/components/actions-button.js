function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { classNames, getExtraAttrs, getSlots, emit } from '../shared/utils.js';
import { colorClasses } from '../shared/mixins.js';
import { f7 } from '../shared/f7.js';

const ComponentName = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    className,
    id,
    style,
    bold,
    close = true
  } = props;
  const extraAttrs = getExtraAttrs(props);
  const elRef = useRef(null);
  useImperativeHandle(ref, () => ({
    el: elRef.current
  }));
  const classes = classNames(className, {
    'actions-button': true,
    'actions-button-bold': bold
  }, colorClasses(props));
  let mediaEl;
  const slots = getSlots(props);

  if (slots.media && slots.media.length) {
    mediaEl = /*#__PURE__*/React.createElement("div", {
      className: "actions-button-media"
    }, slots.media);
  }

  const onClick = e => {
    if (elRef.current && close && f7) {
      f7.actions.close(f7.$(elRef.current).parents('.actions-modal'));
    }

    emit(props, 'click', e);
  };

  return /*#__PURE__*/React.createElement("div", _extends({
    id: id,
    style: style,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick: onClick
  }), mediaEl, /*#__PURE__*/React.createElement("div", {
    className: "actions-button-text"
  }, slots.default));
});
ComponentName.displayName = 'f7-actions-button';
export default ComponentName;