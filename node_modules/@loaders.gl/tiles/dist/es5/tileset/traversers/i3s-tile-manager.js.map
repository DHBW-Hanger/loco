{"version":3,"sources":["../../../../src/tileset/traversers/i3s-tile-manager.ts"],"names":["STATUS","REQUESTED","COMPLETED","ERROR","I3STileManager","I3SPendingTilesRegister","_statusMap","request","key","callback","frameState","frameNumber","status","pendingTilesRegister","register","then","data","actualFrameNumber","deregister","catch","error","isZero"],"mappings":";;;;;;;;;;;;;;;AACA;;AAEA,IAAMA,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE,WADE;AAEbC,EAAAA,SAAS,EAAE,WAFE;AAGbC,EAAAA,KAAK,EAAE;AAHM,CAAf;;IAOqBC,c;AAInB,4BAAc;AAAA;AAAA;AAAA,gEAFiB,IAAIC,wBAAJ,EAEjB;AACZ,SAAKC,UAAL,GAAkB,EAAlB;AACD;;;;WAED,aAAIC,OAAJ,EAAaC,GAAb,EAAkBC,QAAlB,EAA4BC,UAA5B,EAAoD;AAAA;;AAClD,UAAI,CAAC,KAAKJ,UAAL,CAAgBE,GAAhB,CAAL,EAA2B;AACzB,YAAOG,WAAP,GAAsBD,UAAtB,CAAOC,WAAP;AACA,aAAKL,UAAL,CAAgBE,GAAhB,IAAuB;AAACD,UAAAA,OAAO,EAAPA,OAAD;AAAUE,UAAAA,QAAQ,EAARA,QAAV;AAAoBD,UAAAA,GAAG,EAAHA,GAApB;AAAyBE,UAAAA,UAAU,EAAVA,UAAzB;AAAqCE,UAAAA,MAAM,EAAEZ,MAAM,CAACC;AAApD,SAAvB;AAEA,aAAKY,oBAAL,CAA0BC,QAA1B,CAAmCH,WAAnC;AACAJ,QAAAA,OAAO,GACJQ,IADH,CACQ,UAACC,IAAD,EAAU;AACd,UAAA,KAAI,CAACV,UAAL,CAAgBE,GAAhB,EAAqBI,MAArB,GAA8BZ,MAAM,CAACE,SAArC;AACA,cAAoBe,iBAApB,GAAyC,KAAI,CAACX,UAAL,CAAgBE,GAAhB,EAAqBE,UAA9D,CAAOC,WAAP;;AAEA,UAAA,KAAI,CAACE,oBAAL,CAA0BK,UAA1B,CAAqCD,iBAArC;;AACA,UAAA,KAAI,CAACX,UAAL,CAAgBE,GAAhB,EAAqBC,QAArB,CAA8BO,IAA9B,EAAoCN,UAApC;AACD,SAPH,EAQGS,KARH,CAQS,UAACC,KAAD,EAAW;AAChB,UAAA,KAAI,CAACd,UAAL,CAAgBE,GAAhB,EAAqBI,MAArB,GAA8BZ,MAAM,CAACG,KAArC;AACA,cAAoBc,iBAApB,GAAyC,KAAI,CAACX,UAAL,CAAgBE,GAAhB,EAAqBE,UAA9D,CAAOC,WAAP;;AAEA,UAAA,KAAI,CAACE,oBAAL,CAA0BK,UAA1B,CAAqCD,iBAArC;;AACAR,UAAAA,QAAQ,CAACW,KAAD,CAAR;AACD,SAdH;AAeD;AACF;;;WAED,gBAAOZ,GAAP,EAAYE,UAAZ,EAAoC;AAClC,UAAI,KAAKJ,UAAL,CAAgBE,GAAhB,CAAJ,EAA0B;AAExB,aAAKK,oBAAL,CAA0BK,UAA1B,CAAqC,KAAKZ,UAAL,CAAgBE,GAAhB,EAAqBE,UAArB,CAAgCC,WAArE;AAEA,aAAKE,oBAAL,CAA0BC,QAA1B,CAAmCJ,UAAU,CAACC,WAA9C;AACA,aAAKL,UAAL,CAAgBE,GAAhB,EAAqBE,UAArB,GAAkCA,UAAlC;AACD;AACF;;;WAED,cAAKF,GAAL,EAAU;AACR,aAAO,KAAKF,UAAL,CAAgBE,GAAhB,CAAP;AACD;;;WAOD,yBAAgBG,WAAhB,EAA8C;AAC5C,aAAO,CAAC,KAAKE,oBAAL,CAA0BQ,MAA1B,CAAiCV,WAAjC,CAAR;AACD","sourcesContent":["import {FrameState} from '../helpers/frame-state';\nimport I3SPendingTilesRegister from './i3s-frame-counter';\n\nconst STATUS = {\n  REQUESTED: 'REQUESTED',\n  COMPLETED: 'COMPLETED',\n  ERROR: 'ERROR'\n};\n\n// A helper class to manage tile metadata fetching\nexport default class I3STileManager {\n  private _statusMap: object;\n  private pendingTilesRegister = new I3SPendingTilesRegister();\n\n  constructor() {\n    this._statusMap = {};\n  }\n\n  add(request, key, callback, frameState: FrameState) {\n    if (!this._statusMap[key]) {\n      const {frameNumber} = frameState;\n      this._statusMap[key] = {request, callback, key, frameState, status: STATUS.REQUESTED};\n      // Register pending request for the frameNumber\n      this.pendingTilesRegister.register(frameNumber);\n      request()\n        .then((data) => {\n          this._statusMap[key].status = STATUS.COMPLETED;\n          const {frameNumber: actualFrameNumber} = this._statusMap[key].frameState;\n          // Deregister pending request for the frameNumber\n          this.pendingTilesRegister.deregister(actualFrameNumber);\n          this._statusMap[key].callback(data, frameState);\n        })\n        .catch((error) => {\n          this._statusMap[key].status = STATUS.ERROR;\n          const {frameNumber: actualFrameNumber} = this._statusMap[key].frameState;\n          // Deregister pending request for the frameNumber\n          this.pendingTilesRegister.deregister(actualFrameNumber);\n          callback(error);\n        });\n    }\n  }\n\n  update(key, frameState: FrameState) {\n    if (this._statusMap[key]) {\n      // Deregister pending request for the old frameNumber\n      this.pendingTilesRegister.deregister(this._statusMap[key].frameState.frameNumber);\n      // Register pending request for the new frameNumber\n      this.pendingTilesRegister.register(frameState.frameNumber);\n      this._statusMap[key].frameState = frameState;\n    }\n  }\n\n  find(key) {\n    return this._statusMap[key];\n  }\n\n  /**\n   * Check it there are pending tile headers for the particular frameNumber\n   * @param frameNumber\n   * @returns\n   */\n  hasPendingTiles(frameNumber: number): boolean {\n    return !this.pendingTilesRegister.isZero(frameNumber);\n  }\n}\n"],"file":"i3s-tile-manager.js"}