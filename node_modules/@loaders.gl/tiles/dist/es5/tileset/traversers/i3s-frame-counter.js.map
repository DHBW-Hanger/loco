{"version":3,"sources":["../../../../src/tileset/traversers/i3s-frame-counter.ts"],"names":["I3SPendingTilesRegister","Map","frameNumber","oldCount","frameNumberMap","get","set","count"],"mappings":";;;;;;;;;;;;;;;IAIqBA,uB;;;0DAC2B,IAAIC,GAAJ,E;;;;;WAM9C,kBAASC,WAAT,EAA8B;AAC5B,UAAMC,QAAQ,GAAG,KAAKC,cAAL,CAAoBC,GAApB,CAAwBH,WAAxB,KAAwC,CAAzD;AACA,WAAKE,cAAL,CAAoBE,GAApB,CAAwBJ,WAAxB,EAAqCC,QAAQ,GAAG,CAAhD;AACD;;;WAMD,oBAAWD,WAAX,EAAgC;AAC9B,UAAMC,QAAQ,GAAG,KAAKC,cAAL,CAAoBC,GAApB,CAAwBH,WAAxB,KAAwC,CAAzD;AACA,WAAKE,cAAL,CAAoBE,GAApB,CAAwBJ,WAAxB,EAAqCC,QAAQ,GAAG,CAAhD;AACD;;;WAOD,gBAAOD,WAAP,EAA4B;AAC1B,UAAMK,KAAK,GAAG,KAAKH,cAAL,CAAoBC,GAApB,CAAwBH,WAAxB,KAAwC,CAAtD;AACA,aAAOK,KAAK,KAAK,CAAjB;AACD","sourcesContent":["/**\n * Counter to register pending tile headers for the particular frameNumber\n * Until all tiles are loaded we won't call `onTraversalEnd` callback\n */\nexport default class I3SPendingTilesRegister {\n  private frameNumberMap: Map<number, number> = new Map();\n\n  /**\n   * Register a new pending tile header for the particular frameNumber\n   * @param frameNumber\n   */\n  register(frameNumber: number) {\n    const oldCount = this.frameNumberMap.get(frameNumber) || 0;\n    this.frameNumberMap.set(frameNumber, oldCount + 1);\n  }\n\n  /**\n   * Deregister a pending tile header for the particular frameNumber\n   * @param frameNumber\n   */\n  deregister(frameNumber: number) {\n    const oldCount = this.frameNumberMap.get(frameNumber) || 1;\n    this.frameNumberMap.set(frameNumber, oldCount - 1);\n  }\n\n  /**\n   * Check is there are no pending tile headers registered for the particular frameNumber\n   * @param frameNumber\n   * @returns\n   */\n  isZero(frameNumber: number) {\n    const count = this.frameNumberMap.get(frameNumber) || 0;\n    return count === 0;\n  }\n}\n"],"file":"i3s-frame-counter.js"}